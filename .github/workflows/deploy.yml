name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Дозволяє запускати вручну

permissions:
  contents: read
  pages: write
  id-token: write

# Дозволяємо тільки один concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Джоб для збірки
  build:
    name: 🔨 Build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 🔍 Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🧹 Lint code
        run: npm run lint
        continue-on-error: true # Не зупиняємо деплой через lint помилки
        
      - name: 🏗️ Build project
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: 📤 Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Джоб для деплою
  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Джоб для Supabase міграцій (опціонально)
  migrate:
    name: 🗄️ Database Migration
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐳 Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: 🔗 Link Supabase project
        run: |
          echo "${{ secrets.SUPABASE_ACCESS_TOKEN }}" | supabase auth login --token
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          
      - name: 🚀 Run migrations
        run: supabase db push
        continue-on-error: true # Не зупиняємо деплой через помилки міграції
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

  # Джоб для сповіщень про успішний деплой
  notify:
    name: 📢 Notify
    runs-on: ubuntu-latest
    needs: [deploy, migrate]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: ✅ Success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Деплой успішно завершено!"
          echo "🌐 Сайт доступний за адресою: https://duradazhivlad.github.io/Nexus/"
          
      - name: ❌ Failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "💥 Деплой завершився з помилкою!"
          echo "📋 Перевірте логи для деталей"