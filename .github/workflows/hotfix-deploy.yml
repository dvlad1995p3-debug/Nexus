name: üö® Hotfix Deploy

on:
  workflow_dispatch:
    inputs:
      reason:
        description: '–ü—Ä–∏—á–∏–Ω–∞ –µ–∫—Å—Ç—Ä–µ–Ω–æ–≥–æ –¥–µ–ø–ª–æ—é'
        required: true
        type: string
      skip_tests:
        description: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤)'
        required: false
        type: boolean
        default: false
      environment:
        description: '–°–µ—Ä–µ–¥–æ–≤–∏—â–µ –¥–ª—è –¥–µ–ø–ª–æ—é'
        required: true
        type: choice
        options:
          - production
          - staging
        default: production

jobs:
  # –î–∂–æ–± –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó hotfix
  validate:
    name: ‚úÖ Validate Hotfix
    runs-on: ubuntu-latest
    
    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        
      - name: üìù Log hotfix details
        run: |
          echo "## üö® Hotfix Deploy Request"
          echo "**Reason:** ${{ github.event.inputs.reason }}"
          echo "**Environment:** ${{ github.event.inputs.environment }}"
          echo "**Skip Tests:** ${{ github.event.inputs.skip_tests }}"
          echo "**Triggered by:** ${{ github.actor }}"
          echo "**Branch:** ${{ github.ref_name }}"
          echo "**Commit:** ${{ github.sha }}"
          echo "**Time:** $(date -u)"
          
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: üì• Install dependencies
        run: npm ci
        
      - name: üßπ Quick lint check
        if: ${{ !github.event.inputs.skip_tests }}
        run: npm run lint
        continue-on-error: true
        
      - name: üèóÔ∏è Build check
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

  # –î–∂–æ–± –¥–ª—è –¥–µ–ø–ª–æ—é
  deploy:
    name: üöÄ Emergency Deploy
    needs: validate
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment }}
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: üì• Install dependencies
        run: npm ci
        
      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: üì§ Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          
      - name: üåê Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # –î–∂–æ–± –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó –ë–î (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
  migrate:
    name: üóÑÔ∏è Database Migration
    needs: validate
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[migrate]') || contains(github.event.inputs.reason, 'migration')
    
    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        
      - name: üê≥ Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: üö® Emergency migration warning
        run: |
          echo "‚ö†Ô∏è –£–í–ê–ì–ê: –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –µ–∫—Å—Ç—Ä–µ–Ω–∞ –º—ñ–≥—Ä–∞—Ü—ñ—è –ë–î!"
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏ –≤ –º—ñ–≥—Ä–∞—Ü—ñ—è—Ö..."
          
      - name: üîó Link Supabase project
        run: |
          echo "${{ secrets.SUPABASE_ACCESS_TOKEN }}" | supabase auth login --token
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          
      - name: üöÄ Run emergency migration
        run: supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

  # –î–∂–æ–± –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
  notify:
    name: üì¢ Notify Team
    runs-on: ubuntu-latest
    needs: [deploy, migrate]
    if: always()
    
    steps:
      - name: ‚úÖ Success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "## üéâ Hotfix Successfully Deployed!"
          echo ""
          echo "**Details:**"
          echo "- **Reason:** ${{ github.event.inputs.reason }}"
          echo "- **Environment:** ${{ github.event.inputs.environment }}"
          echo "- **Deployed by:** ${{ github.actor }}"
          echo "- **Branch:** ${{ github.ref_name }}"
          echo "- **Time:** $(date -u)"
          echo ""
          echo "**Site URL:** https://duradazhivlad.github.io/Nexus/"
          echo ""
          echo "üîç **Next steps:**"
          echo "1. Test the deployed changes"
          echo "2. Monitor for any issues"
          echo "3. Update team on resolution"
          
      - name: ‚ùå Failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "## üí• Hotfix Deploy Failed!"
          echo ""
          echo "**Details:**"
          echo "- **Reason:** ${{ github.event.inputs.reason }}"
          echo "- **Environment:** ${{ github.event.inputs.environment }}"
          echo "- **Attempted by:** ${{ github.actor }}"
          echo "- **Branch:** ${{ github.ref_name }}"
          echo "- **Time:** $(date -u)"
          echo ""
          echo "üö® **Action required:**"
          echo "1. Check the logs for error details"
          echo "2. Fix the issues"
          echo "3. Retry the hotfix deploy"
          echo "4. Consider rollback if critical"
          exit 1

  # –î–∂–æ–± –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ü–∏–¥–µ–Ω—Ç—É (—è–∫—â–æ –¥–µ–ø–ª–æ–π –Ω–µ –≤–¥–∞–≤—Å—è)
  create-incident:
    name: üìã Create Incident
    runs-on: ubuntu-latest
    needs: [deploy]
    if: failure() && needs.deploy.result == 'failure'
    
    steps:
      - name: üö® Create incident issue
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® Hotfix Deploy Failed - ${new Date().toISOString()}`;
            const body = `
            ## üö® Hotfix Deploy Incident
            
            **Failed deployment details:**
            - **Reason:** ${{ github.event.inputs.reason }}
            - **Environment:** ${{ github.event.inputs.environment }}
            - **Attempted by:** ${{ github.actor }}
            - **Branch:** ${{ github.ref_name }}
            - **Commit:** ${{ github.sha }}
            - **Workflow:** ${{ github.run_id }}
            
            ## üîç Investigation Steps
            - [ ] Review workflow logs
            - [ ] Check build errors
            - [ ] Verify environment configuration
            - [ ] Test locally
            - [ ] Plan rollback strategy
            
            ## üìû Team Notifications
            - [ ] Notify development team
            - [ ] Update stakeholders
            - [ ] Document resolution
            
            **Auto-generated on:** ${new Date().toISOString()}
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['incident', 'hotfix', 'deploy-failure', 'urgent']
            });